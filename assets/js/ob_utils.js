
function scrollToTop(){
	window.scrollTo({
			top: -10,
			left: 0,
			behavior: 'smooth'
		});
}/*
const scrollToTop = () => {
  const c = document.documentElement.scrollTop || document.body.scrollTop;
  if (c > 0) {
    window.requestAnimationFrame(scrollToTop);
    window.scrollTo(0, c - c / 8);
  }
};
*/


/*////////////////////////////////////////
//////////////ANIMATION UTILS
*/////////////////////////////////////////
var animationEnd = 'webkitAnimationEnd mozAnimationEnd oanimationend animationend';

const animateCSS = (element, animation,speed, prefix = 'animate__') =>
    // We create a Promise and return it
    new Promise((resolve, reject) => {
        const animationName = `${prefix}${animation}`;
        //const node = document.querySelector(element);
        const $elem = $(element)
        // $($elem).removeClass('hidden-load')
		//node.classList.add(`${prefix}animated`, animationName);
		if(!speed){
			$elem.addClass(`${prefix}animated ${animationName}`).one(animationEnd, function() {
            	$(this).removeClass(`${prefix}animated ${animationName}`)
            	resolve('Animation ended');
        	})
		}else{
			$elem.addClass(`${prefix}animated ${animationName} ${prefix}${speed}`).one(animationEnd, function() {
            	$(this).removeClass(`${prefix}animated ${animationName} ${prefix}${speed}`)
            	resolve('Animation ended');
        	})
		}
        
        // When the animation ends, we clean the classes and resolve the Promise

        /*
        function handleAnimationEnd() {
          node.classList.remove(`${prefix}animated`, animationName);
          resolve('Animation ended');
        }
        node.addEventListener('animationend', handleAnimationEnd, {once: true});
        */
    });


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////


/*////////////////////////////////////////
//////////////
*/////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////
